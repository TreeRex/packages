/**********************************************************************
 * Extern for sigma
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var sigma = {
  "instances": function () {},
  "version": {},
  "utils": {
    "extend": function () {},
    "dateNow": function () {},
    "pkg": function () {},
    "id": function () {},
    "floatColor": function () {},
    "zoomTo": function () {},
    "getQuadraticControlPoint": function () {},
    "getPointOnQuadraticCurve": function () {},
    "getPointOnBezierCurve": function () {},
    "getSelfLoopControlPoints": function () {},
    "getDistance": function () {},
    "getCircleIntersection": function () {},
    "isPointOnSegment": function () {},
    "isPointOnQuadraticCurve": function () {},
    "isPointOnBezierCurve": function () {},
    "getX": function () {},
    "getY": function () {},
    "getWidth": function () {},
    "getHeight": function () {},
    "getDelta": function () {},
    "getOffset": function () {},
    "doubleClick": function () {},
    "unbindDoubleClick": function () {},
    "easings": {
      "linearNone": function () {},
      "quadraticIn": function () {},
      "quadraticOut": function () {},
      "quadraticInOut": function () {},
      "cubicIn": function () {},
      "cubicOut": function () {},
      "cubicInOut": function () {}
    },
    "loadShader": function () {},
    "loadProgram": function () {},
    "matrices": {
      "translation": function () {},
      "rotation": function () {},
      "scale": function () {},
      "multiply": function () {}
    },
    "emptyObject": function () {},
    "getBoundaries": function () {}
  },
  "settings": {
    "clone": {},
    "immutable": {},
    "verbose": {},
    "classPrefix": {},
    "defaultNodeType": {},
    "defaultEdgeType": {},
    "defaultLabelColor": {},
    "defaultEdgeColor": {},
    "defaultNodeColor": {},
    "defaultLabelSize": {},
    "edgeColor": {},
    "minArrowSize": {},
    "font": {},
    "fontStyle": {},
    "labelColor": {},
    "labelSize": {},
    "labelSizeRatio": {},
    "labelThreshold": {},
    "webglOversamplingRatio": {},
    "borderSize": {},
    "defaultNodeBorderColor": {},
    "hoverFont": {},
    "singleHover": {},
    "hoverFontStyle": {},
    "labelHoverShadow": {},
    "labelHoverShadowColor": {},
    "nodeHoverColor": {},
    "defaultNodeHoverColor": {},
    "labelHoverBGColor": {},
    "defaultHoverLabelBGColor": {},
    "labelHoverColor": {},
    "defaultLabelHoverColor": {},
    "edgeHoverColor": {},
    "edgeHoverSizeRatio": {},
    "defaultEdgeHoverColor": {},
    "edgeHoverExtremities": {},
    "drawEdges": {},
    "drawNodes": {},
    "drawLabels": {},
    "drawEdgeLabels": {},
    "batchEdgesDrawing": {},
    "hideEdgesOnMove": {},
    "canvasEdgesBatchSize": {},
    "webglEdgesBatchSize": {},
    "scalingMode": {},
    "sideMargin": {},
    "minEdgeSize": {},
    "maxEdgeSize": {},
    "minNodeSize": {},
    "maxNodeSize": {},
    "touchEnabled": {},
    "mouseEnabled": {},
    "mouseWheelEnabled": {},
    "doubleClickEnabled": {},
    "eventsEnabled": {},
    "zoomingRatio": {},
    "doubleClickZoomingRatio": {},
    "zoomMin": {},
    "zoomMax": {},
    "mouseZoomDuration": {},
    "doubleClickZoomDuration": {},
    "mouseInertiaDuration": {},
    "mouseInertiaRatio": {},
    "touchInertiaDuration": {},
    "touchInertiaRatio": {},
    "doubleClickTimeout": {},
    "doubleTapTimeout": {},
    "dragTimeout": {},
    "autoResize": {},
    "autoRescale": {},
    "enableCamera": {},
    "enableHovering": {},
    "enableEdgeHovering": {},
    "edgeHoverPrecision": {},
    "rescaleIgnoreSize": {},
    "skipErrors": {},
    "nodesPowRatio": {},
    "edgesPowRatio": {},
    "animationsTime": {}
  },
  "classes": {
    "dispatcher": {
      "extend": function () {}
    },
    "configurable": function () {},
    "graph": {
      "addMethod": function () {},
      "hasMethod": function () {},
      "attach": function () {},
      "attachBefore": function () {},
      "addIndex": function () {}
    },
    "camera": function () {},
    "quad": function () {},
    "edgequad": function () {}
  },
  "captors": {
    "mouse": function () {},
    "touch": function () {}
  },
  "renderers": {
    "canvas": function () {},
    "webgl": function () {},
    "svg": function () {},
    "def": function () {}
  },
  "canvas": {
    "nodes": {
      "def": function () {}
    },
    "edges": {
      "def": function () {},
      "curve": function () {},
      "arrow": function () {},
      "curvedArrow": function () {}
    },
    "labels": {
      "def": function () {}
    },
    "hovers": {
      "def": function () {}
    },
    "edgehovers": {
      "def": function () {},
      "curve": function () {},
      "arrow": function () {},
      "curvedArrow": function () {}
    },
    "extremities": {
      "def": function () {}
    }
  },
  "webgl": {
    "nodes": {
      "def": {
        "POINTS": {},
        "ATTRIBUTES": {},
        "addNode": function () {},
        "render": function () {},
        "initProgram": function () {}
      },
      "fast": {
        "POINTS": {},
        "ATTRIBUTES": {},
        "addNode": function () {},
        "render": function () {},
        "initProgram": function () {}
      }
    },
    "edges": {
      "def": {
        "POINTS": {},
        "ATTRIBUTES": {},
        "addEdge": function () {},
        "render": function () {},
        "initProgram": function () {}
      },
      "fast": {
        "POINTS": {},
        "ATTRIBUTES": {},
        "addEdge": function () {},
        "render": function () {},
        "initProgram": function () {}
      },
      "arrow": {
        "POINTS": {},
        "ATTRIBUTES": {},
        "addEdge": function () {},
        "render": function () {},
        "initProgram": function () {}
      }
    }
  },
  "svg": {
    "nodes": {
      "def": {
        "create": function () {},
        "update": function () {}
      }
    },
    "edges": {
      "def": {
        "create": function () {},
        "update": function () {}
      },
      "curve": {
        "create": function () {},
        "update": function () {}
      }
    },
    "labels": {
      "def": {
        "create": function () {},
        "update": function () {}
      }
    },
    "utils": {
      "show": function () {},
      "hide": function () {}
    },
    "hovers": {
      "def": {
        "create": function () {}
      }
    }
  },
  "middlewares": {
    "rescale": function () {},
    "copy": function () {}
  },
  "misc": {
    "animation": {
      "running": {},
      "camera": function () {},
      "kill": function () {},
      "killAll": function () {},
      "has": function () {}
    },
    "bindEvents": function () {},
    "bindDOMEvents": function () {},
    "drawHovers": function () {}
  }
};
sigma.prototype = {
  "addCamera": function () {},
  "killCamera": function () {},
  "addRenderer": function () {},
  "killRenderer": function () {},
  "refresh": function () {},
  "render": function () {},
  "renderCamera": function () {},
  "kill": function () {}
};
sigma.classes.dispatcher.prototype = {
  "bind": function () {},
  "unbind": function () {},
  "dispatchEvent": function () {},
  "getEvent": function () {}
};
sigma.classes.camera.prototype = {
  "goTo": function () {},
  "applyView": function () {},
  "graphPosition": function () {},
  "cameraPosition": function () {},
  "getMatrix": function () {},
  "getRectangle": function () {}
};
sigma.classes.quad.prototype = {
  "index": function () {},
  "point": function () {},
  "area": function () {}
};
sigma.classes.edgequad.prototype = {
  "index": function () {},
  "point": function () {},
  "area": function () {}
};
sigma.renderers.canvas.prototype = {
  "render": function () {},
  "initDOM": function () {},
  "resize": function () {},
  "clear": function () {},
  "kill": function () {}
};
sigma.renderers.webgl.prototype = {
  "process": function () {},
  "render": function () {},
  "initDOM": function () {},
  "resize": function () {},
  "clear": function () {},
  "kill": function () {}
};
sigma.renderers.svg.prototype = {
  "render": function () {},
  "initDOM": function () {},
  "hideDOMElements": function () {},
  "bindHovers": function () {},
  "resize": function () {}
};
sigma.renderers.def.prototype = {
  "render": function () {},
  "initDOM": function () {},
  "resize": function () {},
  "clear": function () {},
  "kill": function () {}
};
/**********************************************************************
 * End Generated Extern for sigma
/**********************************************************************/